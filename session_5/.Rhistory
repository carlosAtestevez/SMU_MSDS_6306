}
else if(str_level == ">16"){
num_level = runif(1,17,25)
}else{
num_level = as.numeric(str_level)
}
df_eincome_raw[index,4] = num_level
}
df_eincome = df_eincome_raw
#df_eincome$Educ = as.numeric(df_eincome_raw$Educ)
df_eincome %>% ggplot(aes(x = education_nr ,y = Income2005)) + geom_point()
df_eincome[df_eincome$Educ==">16",] %>% ggplot(aes(x=education_nr,y=Income2005))+geom_smooth()
df_eincome[df_eincome$Educ==">16",] %>% ggplot(aes(x=education_nr,y=Income2005))+
geom_smooth()+xlab("Education Level")+
ylab("Income")
df_eincome %>% ggplot(aes(x=education_nr,y=Income2005))+
geom_smooth()+xlab("Education Level")+
ylab("Income")
#Libraries necessary for Plotting
library(ggplot2)
library(ggpubr)
library(plotly)
library(ggthemes)
#Function to read the players file
read_file_players=function(){
dfl_players = read.csv("C:\\Users\\cestevez\\Desktop\\Data Science Sessions\\6306\\session_2\\R\\PlayersBBall.csv",header = TRUE)
return (dfl_players)
}
#This function is used to convert height to numbers(6-12-->6.42)
convert_height = function(p_df_player){
df_r_players = p_df_player
df_r_players$height_nr = 0
count_players = nrow(df_r_players)
print(count_players)
index = 0
for(index in 1:count_players){
str_height = df_r_players[index,5]
if(str_height!=''){
lst_h0 = strsplit(df_r_players[index,5],"-")
lst_h1 = matrix(unlist(lst_h0),ncol=2,byrow=T)
num_h1 = as.numeric(lst_h1[1,1])
num_h2 = as.numeric(lst_h1[1,2])
df_r_players[index,9] = num_h1 + num_h2/12
}
}
return(df_r_players)
}
#Initial Data
df_players_raw = read_file_players()
#Data Converted
df_players = convert_height(df_players_raw)
#Activity 1: The number of players in each position
df_players %>% ggplot(aes(x = position,fill=position))+
geom_bar() + ggtitle("Distribution of Players by Position")+
xlab("Player's Position")+ylab("Number of players")
#Activity 2: Distribution of Weight Centers and Forwards
df_players_filter_1 = df_players[df_players$position=="C" |df_players$position=="F", ]
df_players_filter_1 %>% ggplot(aes(x = weight,fill=position)) +
geom_histogram(color="black",position = "dodge") +
ggtitle("Distribution of Weight Center and Forward")+xlab("Player's weight")+ylab("Number of players")
#Activity 3: Distribution of Height Centers and Forwards
df_players_filter_2 = df_players[df_players$position=="C" |df_players$position=="F", ]
df_players_filter_2 %>% ggplot(aes(x = height_nr,fill=position)) +
geom_histogram(color="black",position = "dodge") +
ggtitle("Distribution of Height Center and Forward")+xlab("Player's Height")+ylab("Number of players")
#Activity 4: Distribution of Height any position
df_players_filter_3 = df_players[df_players$position!="",]
df_players_filter_3 %>% ggplot(aes(x = height_nr,fill=position)) +
geom_histogram(color="black",position="dodge") +
ggtitle("Distribution of Height any position") + facet_wrap(~position)+xlab("Player's Height")+
ylab("Number of Players")
#Activity 5: Height related player's height
nr_correlation = cor(df_players$height_nr,df_players$weight,use = "complete.obs")
str_title_1 = paste("Height vs Weight,correlation:",nr_correlation)
df_players %>% ggplot(aes(x=height_nr,y=weight))+
geom_smooth()+ggtitle(str_title_1)+xlim(c(5, 8))+xlab("Player's Height")+ylab("Player's Weight")
df_players %>% ggplot(aes(x=height_nr,y=weight,color=position))+geom_point()+
geom_smooth()+ggtitle(str_title_1)+xlim(c(5, 8))+xlab("Player's Height")+ylab("Player's Weight")
#Activity 6: Height related player's height by position
df_players_filter_0 = df_players[df_players$position!="",]
df_players_filter_0[] %>% ggplot(aes(x=height_nr,y=weight,col=position,linetype = position))+geom_point()+
geom_smooth()+ggtitle(str_title_1)+xlim(c(5, 8))+facet_wrap(~position)+xlab("Player's Height")+
ylab("Number of Players")
#Activity 7: Player's height over the years
df_players %>% ggplot(aes(x=year_start,y=height_nr))+geom_smooth()+
ggtitle("Player's height over the years")+xlab("Year Star")+ylab("Player's Height")
#Activity 8: 3D Plot Weight,Height,Year
pdata = plot_ly(df_players,x=~height_nr,y=~weight,z=~year_start,color=~position) %>% add_markers() %>% layout(scene=list(xaxis=list(title="Height"),
yaxis=list(title="Weight"),
zaxis=list(title="Year")
))
pdata
#Libraries necessary for Plotting
library(ggplot2)
library(ggpubr)
library(plotly)
library(ggthemes)
#Function to read the players file
read_file_players=function(){
dfl_players = read.csv("C:\\Users\\cestevez\\Desktop\\Data Science Sessions\\6306\\session_2\\R\\PlayersBBall.csv",header = TRUE)
return (dfl_players)
}
#This function is used to convert height to numbers(6-12-->6.42)
convert_height = function(p_df_player){
df_r_players = p_df_player
df_r_players$height_nr = 0
count_players = nrow(df_r_players)
print(count_players)
index = 0
for(index in 1:count_players){
str_height = df_r_players[index,5]
if(str_height!=''){
lst_h0 = strsplit(df_r_players[index,5],"-")
lst_h1 = matrix(unlist(lst_h0),ncol=2,byrow=T)
num_h1 = as.numeric(lst_h1[1,1])
num_h2 = as.numeric(lst_h1[1,2])
df_r_players[index,9] = num_h1 + num_h2/12
}
}
return(df_r_players)
}
#Initial Data
df_players_raw = read_file_players()
#Data Converted
df_players = convert_height(df_players_raw)
#Activity 1: The number of players in each position
df_players %>% ggplot(aes(x = position,fill=position))+
geom_bar() + ggtitle("Distribution of Players by Position")+
xlab("Player's Position")+ylab("Number of players")
#Activity 2: Distribution of Weight Centers and Forwards
df_players_filter_1 = df_players[df_players$position=="C" |df_players$position=="F", ]
df_players_filter_1 %>% ggplot(aes(x = weight,fill=position)) +
geom_histogram(color="black",position = "dodge") +
ggtitle("Distribution of Weight Center and Forward")+xlab("Player's weight")+ylab("Number of players")
#Activity 3: Distribution of Height Centers and Forwards
df_players_filter_2 = df_players[df_players$position=="C" |df_players$position=="F", ]
df_players_filter_2 %>% ggplot(aes(x = height_nr,fill=position)) +
geom_histogram(color="black",position = "dodge") +
ggtitle("Distribution of Height Center and Forward")+xlab("Player's Height")+ylab("Number of players")
#Activity 4: Distribution of Height any position
df_players_filter_3 = df_players[df_players$position!="",]
df_players_filter_3 %>% ggplot(aes(x = height_nr,fill=position)) +
geom_histogram(color="black",position="dodge") +
ggtitle("Distribution of Height any position") + facet_wrap(~position)+xlab("Player's Height")+
ylab("Number of Players")
#Activity 5: Height related player's height
nr_correlation = cor(df_players$height_nr,df_players$weight,use = "complete.obs")
str_title_1 = paste("Height vs Weight,correlation:",nr_correlation)
df_players %>% ggplot(aes(x=height_nr,y=weight))+
geom_smooth()+ggtitle(str_title_1)+xlim(c(5, 8))+xlab("Player's Height")+ylab("Player's Weight")
df_players %>% ggplot(aes(x=height_nr,y=weight,color=position))+geom_point()+
geom_smooth()+ggtitle(str_title_1)+xlim(c(5, 8))+xlab("Player's Height")+ylab("Player's Weight")
#Activity 6: Height related player's height by position
df_players_filter_0 = df_players[df_players$position!="",]
df_players_filter_0[] %>% ggplot(aes(x=height_nr,y=weight,col=position,linetype = position))+geom_point()+
geom_smooth()+ggtitle(str_title_1)+xlim(c(5, 8))+facet_wrap(~position)+xlab("Player's Height")+
ylab("Number of Players")
#Activity 7: Player's height over the years
df_players %>% ggplot(aes(x=year_start,y=height_nr))+geom_smooth()+
ggtitle("Player's height over the years")+xlab("Year Star")+ylab("Player's Height")
#Activity 8: 3D Plot Weight,Height,Year
pdata = plot_ly(df_players,x=~height_nr,y=~weight,z=~year_start,color=~position) %>% add_markers() %>% layout(scene=list(xaxis=list(title="Height"),
yaxis=list(title="Weight"),
zaxis=list(title="Year")
))
pdata
#Libraries necessary for Plotting
library(ggplot2)
library(ggpubr)
library(plotly)
library(ggthemes)
#Function to read the players file
read_file_players=function(){
dfl_players = read.csv("C:\\Users\\cestevez\\Desktop\\Data Science Sessions\\6306\\session_2\\R\\PlayersBBall.csv",header = TRUE)
return (dfl_players)
}
#This function is used to convert height to numbers(6-12-->6.42)
convert_height = function(p_df_player){
df_r_players = p_df_player
df_r_players$height_nr = 0
count_players = nrow(df_r_players)
print(count_players)
index = 0
for(index in 1:count_players){
str_height = df_r_players[index,5]
if(str_height!=''){
lst_h0 = strsplit(df_r_players[index,5],"-")
lst_h1 = matrix(unlist(lst_h0),ncol=2,byrow=T)
num_h1 = as.numeric(lst_h1[1,1])
num_h2 = as.numeric(lst_h1[1,2])
df_r_players[index,9] = num_h1 + num_h2/12
}
}
return(df_r_players)
}
#Initial Data
df_players_raw = read_file_players()
#Data Converted
df_players = convert_height(df_players_raw)
#Activity 1: The number of players in each position
df_players %>% ggplot(aes(x = position,fill=position))+
geom_bar() + ggtitle("Distribution of Players by Position")+
xlab("Player's Position")+ylab("Number of players")
#Activity 2: Distribution of Weight Centers and Forwards
df_players_filter_1 = df_players[df_players$position=="C" |df_players$position=="F", ]
df_players_filter_1 %>% ggplot(aes(x = weight,fill=position)) +
geom_histogram(color="black",position = "dodge") +
ggtitle("Distribution of Weight Center and Forward")+xlab("Player's weight")+ylab("Number of players")
#Activity 3: Distribution of Height Centers and Forwards
df_players_filter_2 = df_players[df_players$position=="C" |df_players$position=="F", ]
df_players_filter_2 %>% ggplot(aes(x = height_nr,fill=position)) +
geom_histogram(color="black",position = "dodge") +
ggtitle("Distribution of Height Center and Forward")+xlab("Player's Height")+ylab("Number of players")
#Activity 4: Distribution of Height any position
df_players_filter_3 = df_players[df_players$position!="",]
df_players_filter_3 %>% ggplot(aes(x = height_nr,fill=position)) +
geom_histogram(color="black",position="dodge") +
ggtitle("Distribution of Height any position") + facet_wrap(~position)+xlab("Player's Height")+
ylab("Number of Players")
#Activity 5: Height related player's height
nr_correlation = cor(df_players$height_nr,df_players$weight,use = "complete.obs")
str_title_1 = paste("Height vs Weight,correlation:",nr_correlation)
df_players %>% ggplot(aes(x=height_nr,y=weight))+
geom_smooth()+ggtitle(str_title_1)+xlim(c(5, 8))+xlab("Player's Height")+ylab("Player's Weight")
df_players %>% ggplot(aes(x=height_nr,y=weight,color=position))+geom_point()+
geom_smooth()+ggtitle(str_title_1)+xlim(c(5, 8))+xlab("Player's Height")+ylab("Player's Weight")
#Activity 6: Height related player's height by position
df_players_filter_0 = df_players[df_players$position!="",]
df_players_filter_0[] %>% ggplot(aes(x=height_nr,y=weight,col=position,linetype = position))+geom_point()+
geom_smooth()+ggtitle(str_title_1)+xlim(c(5, 8))+facet_wrap(~position)+xlab("Player's Height")+
ylab("Number of Players")
#Activity 7: Player's height over the years
df_players %>% ggplot(aes(x=year_start,y=height_nr))+geom_smooth()+
ggtitle("Player's height over the years")+xlab("Year Star")+ylab("Player's Height")
#Activity 8: 3D Plot Weight,Height,Year
pdata = plot_ly(df_players,x=~height_nr,y=~weight,z=~year_start,color=~position) %>% add_markers() %>% layout(scene=list(xaxis=list(title="Height"),
yaxis=list(title="Weight"),
zaxis=list(title="Year")
))
pdata
summary(df_players)
# Create the vectors for data frame.
height <- c(132,151,162,139,166,147,122)
weight <- c(48,49,66,53,67,52,40)
gender <- c("male","male","female","female","male","female","male")
# Create the data frame.
input_data <- data.frame(height,weight,gender)
print(input_data)
# Test if the gender column is a factor.
print(is.factor(input_data$gender))
# Print the gender column so see the levels.
print(input_data$gender)
data <- c("East","West","East","North","North","East","West",
"West","West","East","North")
# Create the factors
factor_data <- factor(data)
print(factor_data)
# Apply the factor function with required order of the level.
new_order_data <- factor(factor_data,levels = c("East","West","North"))
print(new_order_data)
new_order_data
data <- c("East","West","East","North","North","East","West",
"West","West","East","North")
# Create the factors
factor_data <- factor(data)
print(factor_data)
# Apply the factor function with required order of the level.
new_order_data <- factor(factor_data,levels = c("East","West","North"))
print(new_order_data[1])
data()
mpg
mpg
library(ggplot2)
mpg
mg
mpg
mpg_data = mpg
View(mpg_data)
library(ggplot2)
mpg_data = filter(mpg,class=="pickup")
filter(mpg,class=="pickup")
mpg %>% filter(class="pickup")
mpg %>% filter(class=="pickup")
library(ggplot2)
mpg %>% filter(class=="pickup")
library(ggplot2)
library(ggpubr)
mpg %>% filter(class=="pickup")
library(dplyr)
install.packages(dplyr)
install.packages(dplyr)
install.packages("dplyr"")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
library(ggplot2)
library(ggpubr)
mpg %>% filter(class=="pickup")
library(ggplot2)
library(ggpubr)
library(dplyr)
mpg %>% filter(class=="pickup")
library(ggplot2)
library(ggpubr)
library(dplyr)
mpg %>% filter(class=="pickup")
mpg_data = filter(mpg,class=="pickup")
View(mpg_data)
mpg %>% filter(class == "compact")
mpg %>% filter(class = "compact")
filter(mpg,class = "compact")
filter(mpg,class == "compact")
install.packages("tidyverse")
x = NA
if is.na(x)
is.na(x)
x\
x
is.na(x)
library(tidyverse)
lst_1 = seq(from = 1, to = 10, length.out = 20)
lst_1
lst_id = c(1,2,3,4)
lst_name = c("Charles","George","Michael")
lst_last_name = c("Gates","Michael","Sheen")
df_1 = data.frame(lst_id,lst_name,lst_last_name)
lst_id = c(1,2,3)
lst_name = c("Charles","George","Michael")
lst_last_name = c("Gates","Michael","Sheen")
df_1 = data.frame(lst_id,lst_name,lst_last_name)
print(df_1)
lst_id = c(1,2,3)
lst_name = c("Charles","George","Michael")
lst_last_name = c("Gates","Michael","Sheen")
df_1 = data.frame(lst_id,lst_name,lst_last_name)
df_2 = filter(df1,lst_id > 2)
lst_id = c(1,2,3)
lst_name = c("Charles","George","Michael")
lst_last_name = c("Gates","Michael","Sheen")
df_1 = data.frame(lst_id,lst_name,lst_last_name)
df_2 = filter(df_2,lst_id > 2)
lst_id = c(1,2,3)
lst_name = c("Charles","George","Michael")
lst_last_name = c("Gates","Michael","Sheen")
df_1 = data.frame(lst_id,lst_name,lst_last_name)
df_2 = filter(df_1,lst_id > 2)
df_2
library(ggplot2)
library(ggpubr)
library(dplyr)
mpg %>% filter(class=="pickup")
mpg_data = filter(mpg,class=="pickup")
df_1 = data.frame(id = c(1,2,3),name=c("Carlos","Jose","Eduardo"))
df_1
library(ggplot2)
library(ggpubr)
library(dplyr)
mpg %>% filter(class=="pickup")
mpg_data = filter(mpg,class=="pickup")
df_1 = data.frame(id = c(1,2,3),name=c("Carlos","Jose","Eduardo"),age=c(12,23,NA))
df_1 %>% filter(!is.na("age"))
library(ggplot2)
library(ggpubr)
library(dplyr)
mpg %>% filter(class=="pickup")
mpg_data = filter(mpg,class=="pickup")
df_1 = data.frame(id = c(1,2,3),name=c("Carlos","Jose","Eduardo"),age=c(12,23,NA))
df_2 = filter(df_1,!is.na("age"))
df_2
library(ggplot2)
library(ggplot2)
library(ggpubr)
library(dplyr)
mpg %>% filter(class=="pickup")
mpg_data = filter(mpg,class=="pickup")
df_1 = data.frame(id = c(1,2,3),name=c("Carlos","Jose","Eduardo"),age=c(12,23,NA))
df_2 = filter(df_1,is.na("age"))
df_2
library(ggplot2)
library(ggpubr)
library(dplyr)
mpg %>% filter(class=="pickup")
mpg_data = filter(mpg,class=="pickup")
df_1 = data.frame(id = c(1,2,3),name=c("Carlos","Jose","Eduardo"),age=c(12,23,NA))
df_2 = filter(df_1,age != 12)
df_2
library(ggplot2)
library(ggpubr)
library(dplyr)
mpg %>% filter(class=="pickup")
mpg_data = filter(mpg,class=="pickup")
df_1 = data.frame(id = c(1,2,3),name=c("Carlos","Jose","Eduardo"),age=c(12,23,NA))
df_2 = filter(df_1,is.na(age))
df_2
library(ggplot2)
library(ggpubr)
library(dplyr)
mpg %>% filter(class=="pickup")
mpg_data = filter(mpg,class=="pickup")
df_1 = data.frame(id = c(1,2,3),name=c("Carlos","Jose","Eduardo"),age=c(12,23,NA))
df_2 = filter(!df_1,is.na(age))
library(ggplot2)
library(ggpubr)
library(dplyr)
mpg %>% filter(class=="pickup")
mpg_data = filter(mpg,class=="pickup")
df_1 = data.frame(id = c(1,2,3),name=c("Carlos","Jose","Eduardo"),age=c(12,23,NA))
df_2 = filter(df_1,!is.na(age))
df_2
```{r}
install.packages('plyr', repos = "http://cran.us.r-project.org")
install.packages("r package", repos = "http://cran.us.r-project.org")
library("palmerpenguins")
install.packages("palmerpenguins")
library("palmerpenguins")
mpg %>%
arrange(manufacturer, cty) %>%
print(n = 30)
library(tidyverse)
df %>% filter(!is.na(Years)) #Filter out rows with missing Years
library(ggplot2)
library(ggpubr)
library(dplyr)
mpg %>% filter(class=="pickup")
mpg_data = filter(mpg,class=="pickup")
df_1 = data.frame(id = c(1,2,3),name=c("Carlos","Jose","Eduardo"),age=c(12,23,NA))
df_2 = filter(df_1,!is.na(age))
df_2
x = NA
is.na(x)
#Dataframe for the Example
age = c(22,21,NA,24,19,20,23)
yrs_math_ed = c(4,5,NA,2,5,3,5)
names = c("Mary","Martha","Rosy","Kim","Kristen","Amy","Sam")
subject = c("English","Math",NA,"Sociology","Math","Music","Dance")
df = data.frame(Age = age, Years = yrs_math_ed,Name = names, Major = subject)
df
is.na(df$Years)
is.na(df$Name)
is.na(df$Major)
library(tidyverse)
df %>% filter(!is.na(Years)) #Filter out rows with missing Years
mpg %>%
arrange(manufacturer) %>%
print(n = 30)
library(ggplot2)
library(ggpubr)
library(dplyr)
#Filters
mpg %>% filter(class=="pickup")
mpg_data = filter(mpg,class=="pickup")
df_1 = data.frame(id = c(1,2,3),name=c("Carlos","Jose","Eduardo"),age=c(12,23,NA))
df_2 = filter(df_1,!is.na(age))
print(df_1)
print(df_1,n=1)
?arrange
df_3 = arrange(df1,name)
df_1 = data.frame(id = c(1,2,3),name=c("Carlos","Jose","Eduardo"),age=c(12,23,NA))
df_2 = filter(df_1,!is.na(age))
df_3 = arrange(df_1,name)
library(ggplot2)
df_3 = arrange(df_1,name)
df_3
df_1 %>% arrange(name)
df_1 %>% arrange(name) %>% print(n=1)
#Arrange
df_3 = arrange(df_1,name)
df_3
df_1 %>% arrange(name) %>%
print(n=1)
mpg %>%
arrange(manufacturer) %>%
print(n = 30)
df_1 %>% arrange(name) %>% print(n=1)
library(tidyverse)
#Filters
mpg %>% filter(class=="pickup")
mpg_data = filter(mpg,class=="pickup")
df_1 = data.frame(id = c(1,2,3),name=c("Carlos","Jose","Eduardo"),age=c(12,23,NA))
df_2 = filter(df_1,!is.na(age))
#Arrange
df_3 = arrange(df_1,name)
df_3
df_1 %>% arrange(name) %>% print(n=1)
df_1
df_1 %>% arrange(name) %>% print(n=1)
library(tidyverse)
#Filters
mpg %>% filter(class=="pickup")
mpg_data = filter(mpg,class=="pickup")
df_1 = data.frame(id = c(1,2,3),name=c("Carlos","Jose","Eduardo"),age=c(12,23,12))
df_2 = filter(df_1,!is.na(age))
#Arrange
df_3 = arrange(df_1,name)
df_3
df_1 %>% arrange(name) %>% print(n=1)
df %>% filter(is.na(Years))
install.packages("GGlary")
install.packages("GGally")
library(GGally)
mpg %>% select(class,cty,hwy) %>% ggpairs(aes(color=class))
#NEW PACKAGE! Ggally
install.packages("GGally")
library(GGally)
#chooses the columns class, city, hwy to use with ggpairs
mpg %>%
select(class, cty, hwy) %>%
ggpairs(aes(color = class))
install.packages("GGally")
knitr::opts_chunk$set(echo = TRUE)
library(WHO)
codes <- get_codes()
